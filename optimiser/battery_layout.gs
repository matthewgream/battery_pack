
// ------------------------------------------------------------------------------------------------

// generate 'battery_cells_data.txt' (the graph of cells connections) from the 'initial' sheet

function generate_initial_problem () {
  const batteries = [];
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName ('initial');
  //
  for (var y = 1; y < sheet.getMaxRows (); y ++)
    for (var x = 1; x < sheet.getMaxColumns (); x ++) {
      const n = Number (sheet.getRange (y, x).getValue () || 0);
      if (n > 0 && n < 250) {
        const battery = {
          n,
          x, y,
          0: Number (sheet.getRange (y - 2, x - 1).getValue () || 0),
          1: Number (sheet.getRange (y - 2, x + 1).getValue () || 0),
          2: Number (sheet.getRange (y, x - 2).getValue () || 0),
          3: Number (sheet.getRange (y, x + 2).getValue () || 0),
          4: Number (sheet.getRange (y + 2, x - 1).getValue () || 0),
          5: Number (sheet.getRange (y + 2, x + 1).getValue () || 0),
        };
        // awful
        if (battery[0] == 0) delete battery [0];
        if (battery[1] == 0) delete battery [1];
        if (battery[2] == 0) delete battery [2];
        if (battery[3] == 0) delete battery [3];
        if (battery[4] == 0) delete battery [4];
        if (battery[5] == 0) delete battery [5];
        if (n >= 127 && n <= 140)
          battery.g = 1;
        else if (n == 1 || n == 2 || n == 6)
          battery.g = 10;
        batteries.push (battery);
      }
    }
  //
  const str = JSON.stringify (batteries), len = str.length / 2;
  console.log (str.length);
  console.log (str.substring (0, len));
  console.log (str.substring (len));
}

// ------------------------------------------------------------------------------------------------

// generate a 'solution.json' (the cell groupings) from the 'initial' sheet by interpreting colours

function generate_initial_solution () {
  const solution = {};
  const colours = {  '#666666': 10, '#6aa84f': 9, '#ff9900': 8, '#ffff00': 7, '#4a86e8': 6, '#00ff00': 5, '#ff00ff': 4, '#00ffff': 3, '#9900ff': 2, '#ff0000': 1 };
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName ('initial');
  //
  for (var r = 1; r < sheet.getMaxRows (); r ++)
    for (var c = 1; c < sheet.getMaxColumns (); c ++) {
      var range = sheet.getRange (r, c);
      const n = Number (range.getValue () || 0);
      if (n > 0 && n < 250) {
        const b = range.getBackground (), g = colours [b];
        solution [n] = g;
      }
    }
  //
  console.log (JSON.stringify (solution));
}

// ------------------------------------------------------------------------------------------------

// render a 'solution.json' (the cell groupings) into the 'current' sheet

function render_specific_solution () {

  // const solution = JSON.parse ('{"1": 10, "2": 10, "3": 10, "4": 9, "5": 9, "6": 10, "7": 10, "8": 9, "9": 9, "10": 10, "11": 10, "12": 10, "13": 9, "14": 10, "15": 9, "16": 10, "17": 9, "18": 9, "19": 9, "20": 7, "21": 7, "22": 6, "23": 6, "24": 6, "25": 6, "26": 6, "27": 10, "28": 9, "29": 9, "30": 8, "31": 9, "32": 8, "33": 7, "34": 7, "35": 7, "36": 6, "37": 6, "38": 6, "39": 10, "40": 10, "41": 9, "42": 8, "43": 8, "44": 7, "45": 7, "46": 6, "47": 6, "48": 6, "49": 5, "50": 5, "51": 10, "52": 9, "53": 8, "54": 8, "55": 8, "56": 7, "57": 7, "58": 6, "59": 6, "60": 5, "61": 5, "62": 8, "63": 8, "64": 8, "65": 7, "66": 7, "67": 7, "68": 7, "69": 5, "70": 6, "71": 5, "72": 5, "73": 8, "74": 8, "75": 8, "76": 8, "77": 7, "78": 4, "79": 4, "80": 5, "81": 5, "82": 5, "83": 3, "84": 3, "85": 3, "86": 3, "87": 4, "88": 4, "89": 5, "90": 4, "91": 5, "92": 5, "93": 3, "94": 3, "95": 4, "96": 4, "97": 4, "98": 4, "99": 4, "100": 4, "101": 5, "102": 3, "103": 3, "104": 3, "105": 3, "106": 4, "107": 4, "108": 4, "109": 2, "110": 2, "111": 3, "112": 3, "113": 2, "114": 2, "115": 2, "116": 2, "117": 2, "118": 2, "119": 3, "120": 3, "121": 2, "122": 2, "123": 2, "124": 2, "125": 2, "126": 2, "127": 1, "128": 1, "129": 1, "130": 1, "131": 1, "132": 1, "133": 1, "134": 1, "135": 1, "136": 1, "137": 1, "138": 1, "139": 1, "140": 1}');
  // const solution = JSON.parse ('{"1": 10, "2": 10, "3": 10, "4": 10, "5": 10, "6": 10, "7": 10, "8": 10, "9": 10, "10": 9, "11": 10, "12": 9, "13": 10, "14": 9, "15": 10, "16": 9, "17": 10, "18": 9, "19": 8, "20": 7, "21": 7, "22": 7, "23": 7, "24": 7, "25": 7, "26": 6, "27": 9, "28": 10, "29": 9, "30": 9, "31": 8, "32": 7, "33": 8, "34": 7, "35": 6, "36": 6, "37": 7, "38": 6, "39": 9, "40": 9, "41": 8, "42": 8, "43": 7, "44": 8, "45": 7, "46": 6, "47": 7, "48": 6, "49": 6, "50": 6, "51": 9, "52": 8, "53": 9, "54": 8, "55": 8, "56": 8, "57": 7, "58": 7, "59": 6, "60": 5, "61": 6, "62": 9, "63": 9, "64": 8, "65": 5, "66": 5, "67": 6, "68": 6, "69": 6, "70": 5, "71": 6, "72": 5, "73": 8, "74": 8, "75": 4, "76": 4, "77": 5, "78": 5, "79": 5, "80": 5, "81": 5, "82": 5, "83": 8, "84": 4, "85": 5, "86": 5, "87": 4, "88": 4, "89": 4, "90": 4, "91": 4, "92": 5, "93": 4, "94": 4, "95": 4, "96": 4, "97": 3, "98": 3, "99": 3, "100": 3, "101": 3, "102": 4, "103": 3, "104": 3, "105": 3, "106": 2, "107": 2, "108": 3, "109": 2, "110": 2, "111": 4, "112": 3, "113": 2, "114": 3, "115": 3, "116": 2, "117": 3, "118": 2, "119": 3, "120": 2, "121": 2, "122": 2, "123": 2, "124": 2, "125": 2, "126": 2, "127": 1, "128": 1, "129": 1, "130": 1, "131": 1, "132": 1, "133": 1, "134": 1, "135": 1, "136": 1, "137": 1, "138": 1, "139": 1, "140": 1}');
  const solution = JSON.parse ('{"1": 10, "2": 10, "3": 10, "4": 10, "5": 10, "6": 10, "7": 10, "8": 10, "9": 10, "10": 9, "11": 10, "12": 10, "13": 10, "14": 9, "15": 10, "16": 9, "17": 9, "18": 9, "19": 7, "20": 7, "21": 7, "22": 7, "23": 7, "24": 6, "25": 6, "26": 6, "27": 9, "28": 10, "29": 9, "30": 8, "31": 7, "32": 8, "33": 7, "34": 7, "35": 6, "36": 7, "37": 7, "38": 6, "39": 9, "40": 9, "41": 9, "42": 8, "43": 8, "44": 8, "45": 7, "46": 6, "47": 6, "48": 6, "49": 6, "50": 6, "51": 9, "52": 8, "53": 8, "54": 8, "55": 7, "56": 7, "57": 4, "58": 5, "59": 6, "60": 5, "61": 6, "62": 9, "63": 8, "64": 8, "65": 8, "66": 7, "67": 4, "68": 4, "69": 5, "70": 5, "71": 5, "72": 6, "73": 9, "74": 8, "75": 8, "76": 3, "77": 4, "78": 4, "79": 5, "80": 4, "81": 5, "82": 6, "83": 9, "84": 8, "85": 3, "86": 4, "87": 4, "88": 4, "89": 4, "90": 5, "91": 5, "92": 5, "93": 3, "94": 3, "95": 4, "96": 4, "97": 4, "98": 3, "99": 4, "100": 5, "101": 5, "102": 3, "103": 3, "104": 3, "105": 3, "106": 3, "107": 2, "108": 2, "109": 5, "110": 5, "111": 3, "112": 3, "113": 3, "114": 2, "115": 3, "116": 2, "117": 2, "118": 2, "119": 2, "120": 2, "121": 2, "122": 2, "123": 2, "124": 2, "125": 2, "126": 2, "127": 1, "128": 1, "129": 1, "130": 1, "131": 1, "132": 1, "133": 1, "134": 1, "135": 1, "136": 1, "137": 1, "138": 1, "139": 1, "140": 1}');
  //
  const colours = [ "#FF0000", "#00FF00", "#0000FF", "#FFFF00", "#00FFFF", "#FF00FF", "#FFA500", "#800080", "#32CD32", "#008080" ];
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName ('current2');
  for (var r = 1; r < sheet.getMaxRows (); r ++)
    for (var c = 1; c < sheet.getMaxColumns (); c ++) {
      var range = sheet.getRange (r, c);
      const n = Number (range.getValue () || 0);
      if (n > 0 && n < 250)
        range.setBackground (colours [solution [n] - 1]);
    }
  colours.forEach ((colour, index) => {
    var range = sheet.getRange (37, 12 + (index * 2));
    range.setValue ('G ' + (index + 1));
    range.setBackground (colour);
  });
}

// ------------------------------------------------------------------------------------------------
