#!/usr/bin/bash

#############

SERVICE_NAME_INT="$SERVICE_NAME-service-upnp"
SERVICE_ADDR_INT=$(ip address | grep 192 | awk '{ print $2; }')
#
__CHECK=$(/usr/bin/upnpc -L | grep $SERVICE_NAME_INT)
if [ -z "$__CHECK" ]; then
        /usr/bin/upnpc -e $SERVICE_NAME_INT -r $SERVICE_PORT_INT $SERVICE_PORT_EXT $SERVICE_TYPE > /dev/null
elif [[ "$__CHECK" != *"$SERVICE_ADDR_INT"* ]] || [[ "$__CHECK" != *"$SERVICE_PORT_EXT"* ]] || [[ "$__CHECK" != *"$SERVICE_PORT_INT"* ]]; then
        /usr/bin/upnpc -d $SERVICE_PORT_EXT $SERVICE_PROTOCOL > /dev/null > /dev/null
        /usr/bin/upnpc -e $SERVICE_NAME_INT -r $SERVICE_PORT_INT $SERVICE_PORT_EXT $SERVICE_TYPE > /dev/null
fi

#############

SERVICE_NAME_EXT="$SERVICE_NAME-service"
SERVICE_ADDR_EXT=$(curl --silent https://api.ipify.org/)
#
__RECORD=$(curl --silent --request GET --url https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records?comment.contains=$SERVICE_NAME \
	--header "Authorization: Bearer $CF_TOKEN" | jq ".result[0].id" | tr -d '"')
if [ -z "$__RECORD" ]; then
	echo "CANNOT FIND CDNS RECORD ID TO UPDATE"
else
	curl --silent --request PUT --url https://api.cloudflare.com/client/v4/zones/$SERVICE_CDNS_ZONE/dns_records/$__RECORD \
		--header "Content-Type: application/json" --header "Authorization: Bearer $SERVICE_CDNS_TOKEN" \
		--data "{ \"name\": \"$SERVICE_NAME_EXT\", \"proxied\": false, \"ttl\": 600, \"content\": \"$SERVICE_ADDR_EXT\", \"type\": \"A\" }"  > /dev/null
fi

#############

